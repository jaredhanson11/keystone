apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lib.common.fullname" . }}
  labels:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
    {{- include "landing-page.client.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "landing-page.client.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        {{- include "landing-page.client.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.imageVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ include "lib.common.fullname" . }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lib.common.fullname" . }}-server
  labels:
    {{- include "landing-page.server.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "landing-page.server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "landing-page.server.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.imageVersion }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            - name: APP_CONFIG
              value: /app/config.py
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.server.dbConnection.passwordSecret.secretName }}
                  key: {{ .Values.server.dbConnection.passwordSecret.keyName }}
            - name: DB_NAME
              value: {{ .Values.server.dbConnection.name }}
            - name: DB_USER
              value: {{ .Values.server.dbConnection.user }}
            - name: DB_PORT
              value: "{{ .Values.server.dbConnection.port }}"
            - name: DB_HOST
              value: {{ .Values.server.dbConnection.host }}
            - name: DB_PREFIX
              value: {{ .Values.server.dbConnection.prefix }}
            - name: SQLALCHEMY_DATABASE_URI
              value: "$(DB_PREFIX)$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"

          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/hb
              port: http
          readinessProbe:
            httpGet:
              path: /api/hb
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
