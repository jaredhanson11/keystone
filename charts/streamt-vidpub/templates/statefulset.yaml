apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lib.common.fullname" . }}
  labels:
    {{- include "lib.common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lib.common.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "lib.common.fullname" . }}
  template:
    metadata:
      labels:
        checksum/config: {{ include "streamt-vidpub.nginx-conf" . | sha256sum | trunc 63 }}
        {{- include "lib.common.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: {{ include "lib.common.fullname" . }}
              mountPath: {{ .Values.rtmpRecordLocation }}
          ports:
            - name: rtmp
              containerPort: 1935
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{ if .Values.streamPublisher.enabled }}
        - name: s3-publisher
          image: "{{ .Values.streamPublisher.image.repository }}:{{ .Values.streamPublisher.image.tag }}"
          imagePullPolicy: {{ .Values.streamPublisher.image.pullPolicy }}
          env:
            - name: STREAMS_RECORD_PATH
              value: {{ .Values.rtmpRecordLocation | quote }}
            - name: S3_BUCKET
              value: {{ .Values.streamPublisher.s3Bucket | quote }}
            - name: S3_ENDPOINT
              value: {{ .Values.streamPublisher.s3Endpoint | quote }}
            - name: S3_REGION
              value: {{ .Values.streamPublisher.s3Region | quote}}
{{ with .Values.streamPublisher.s3ObjectPrefix }}
            - name: S3_OBJECTS_PREFIX
              value: {{ . | quote }}
{{ end }}
{{ with .Values.streamPublisher.cronSchedule }}
            - name: CRON_SCHEDULE
              value: {{ . | quote }}
{{ end }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ required "Existing secret required." .Values.streamPublisher.s3ExistingSecret }}
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ required "Existing secret required." .Values.streamPublisher.s3ExistingSecret }}
                  key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
            - name: {{ include "lib.common.fullname" . }}
              mountPath: {{ .Values.rtmpRecordLocation }}
          resources:
            {{- toYaml .Values.streamPublisher.resources | nindent 12 }}
{{ end }}
      initContainers:
        - name: setup-permissions
          image: busybox:1.28
          command: ['sh', '-c', 'chown nobody: {{ .Values.rtmpRecordLocation }}']
          volumeMounts:
            - name: {{ include "lib.common.fullname" . }}
              mountPath: {{ .Values.rtmpRecordLocation }}
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ include "lib.common.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "lib.common.fullname" . }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.rtmpVolumeSize }}
