image:
  repository: jaredhanson11/toyota
  tag: latest

dbConnection:
  shouldConnect: true
  name: toyota

existingSecret: toyota-secrets
secret:
  SECRET_KEY: ""
  TYPEFORM_API_KEY: ""
  RMQ_PASSWORD: ""
mountedSecrets:
  credentials.json: "/secrets/"
config:
  SUMM_LOG_FILE: "/app/app.log"
  RMQ_USER: keystone-user
  RMQ_HOST: rabbitmq
  RMQ_PORT: "5672"
  CORS_ALLOW_ORIGINS: "http://localhost:8080,https://rep-staging.rep.so"
  GOOGLE_OAUTH_SECRETS_FILE: "/secrets/credentials.json"
  GOOGLE_OAUTH_CALLBACK_URL: "https://rep-staging.rep.so/"
  TYPEFORM_SIGNUP_SURVEY_ID: "MIZ0J0kW"

ingress:
  subdomain: "toyota-staging"

config.py: |-
  import os

  # CORS through summ-web
  CORS_ALLOW_ORIGINS = os.environ.get("CORS_ALLOW_ORIGINS", "").split(",")

  # SQLALCHEMY
  SQLALCHEMY_DATABASE_URI = os.environ["SQLALCHEMY_DATABASE_URI"]

  # RMQ connection config
  RMQ_USER = os.environ["RMQ_USER"]
  RMQ_PASSWORD = os.environ["RMQ_PASSWORD"]
  RMQ_HOST = os.environ["RMQ_HOST"]
  RMQ_PORT = os.environ["RMQ_PORT"]

  # JWT Auth
  SECRET_KEY = os.environ.get("SECRET_KEY")
  JWT_LIFESPAN = os.environ.get("JWT_LIFESPAN", -1)
  JWT_FRESHSPAN = os.environ.get("JWT_FRESHSPAN", 5)

  # Google OAUTh
  GOOGLE_OAUTH_SECRETS_FILE = os.environ.get("GOOGLE_OAUTH_SECRETS_FILE")
  GOOGLE_OAUTH_CALLBACK_URL = os.environ.get("GOOGLE_OAUTH_CALLBACK_URL")

  # Typeform
  TYPEFORM_API_KEY = os.environ.get("TYPEFORM_API_KEY")
  TYPEFORM_SIGNUP_SURVEY_ID = os.environ.get("TYPEFORM_SIGNUP_SURVEY_ID")

  # Logging
  tmp = os.environ.get("SUMM_LOG_FILE")
  if tmp:
      SUMM_LOG_FILE = tmp

  tmp = os.environ.get("SUMM_LOG_FILE_SIZE")
  if tmp:
      SUMM_LOG_FILE_SIZE = tmp
